
pruebaBotonServo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000018a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001de  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000210  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000797  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005de  00000000  00000000  00000a03  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000374  00000000  00000000  00000fe1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001358  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000373  00000000  00000000  0000137c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000230  00000000  00000000  000016ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000191f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 c3 00 	jmp	0x186	; 0x186 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

int main(void)
{
	uint8_t ESTADO = true;
	//Entradas
	DDRA &=~ (1<<PA0);
  6c:	d0 98       	cbi	0x1a, 0	; 26
	DDRA &=~ (1<<PA1);
  6e:	d1 98       	cbi	0x1a, 1	; 26
	DDRA &=~ (1<<PA2);
  70:	d2 98       	cbi	0x1a, 2	; 26
	DDRA &=~ (1<<PA3);
  72:	d3 98       	cbi	0x1a, 3	; 26
	DDRA &=~ (1<<PA4);
  74:	d4 98       	cbi	0x1a, 4	; 26
	
	
	//Salidas
	DDRD |= (1<<PD7);
  76:	8f 9a       	sbi	0x11, 7	; 17
	DDRD |= (1<<PD5);
  78:	8d 9a       	sbi	0x11, 5	; 17
	DDRB |= (1<<PB3);
  7a:	bb 9a       	sbi	0x17, 3	; 23
	DDRD |= (1<<PD4);
  7c:	8c 9a       	sbi	0x11, 4	; 17
		
	TCNT1 = 0;		
  7e:	1d bc       	out	0x2d, r1	; 45
  80:	1c bc       	out	0x2c, r1	; 44
	ICR1 = 2499;	
  82:	83 ec       	ldi	r24, 0xC3	; 195
  84:	99 e0       	ldi	r25, 0x09	; 9
  86:	97 bd       	out	0x27, r25	; 39
  88:	86 bd       	out	0x26, r24	; 38

	TCCR1A = (1<<WGM11)|(1<<COM1A1);
  8a:	82 e8       	ldi	r24, 0x82	; 130
  8c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
  8e:	8b e1       	ldi	r24, 0x1B	; 27
  90:	8e bd       	out	0x2e, r24	; 46
	TCCR2 |= (0<<FOC2)|(1<<WGM20)|(1<<WGM21)|(0<<COM20)|(1<<COM21)|(1<<CS20)|(0<<CS21)|(1<<CS22);
  92:	85 b5       	in	r24, 0x25	; 37
  94:	8d 66       	ori	r24, 0x6D	; 109
  96:	85 bd       	out	0x25, r24	; 37
	uint8_t i = 150;
	uint8_t j = 65;
  98:	81 e4       	ldi	r24, 0x41	; 65
	ICR1 = 2499;	

	TCCR1A = (1<<WGM11)|(1<<COM1A1);
	TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
	TCCR2 |= (0<<FOC2)|(1<<WGM20)|(1<<WGM21)|(0<<COM20)|(1<<COM21)|(1<<CS20)|(0<<CS21)|(1<<CS22);
	uint8_t i = 150;
  9a:	96 e9       	ldi	r25, 0x96	; 150



int main(void)
{
	uint8_t ESTADO = true;
  9c:	41 e0       	ldi	r20, 0x01	; 1
				PORTD &=~ (1<<PD4);
				while (PINA & (1<<PA4))
				{
					
				}
				ESTADO = !ESTADO;
  9e:	51 e0       	ldi	r21, 0x01	; 1
  a0:	60 e0       	ldi	r22, 0x00	; 0
	uint8_t i = 150;
	uint8_t j = 65;
	while(1)
	{
		
		if (PINA & (1<<PA4))
  a2:	cc 9b       	sbis	0x19, 4	; 25
  a4:	22 c0       	rjmp	.+68     	; 0xea <main+0x7e>
		{
			if (ESTADO == true)
  a6:	41 30       	cpi	r20, 0x01	; 1
  a8:	79 f4       	brne	.+30     	; 0xc8 <main+0x5c>
			{
				PORTB |= (1<<PB3);
  aa:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	2f ef       	ldi	r18, 0xFF	; 255
  ae:	34 e3       	ldi	r19, 0x34	; 52
  b0:	4c e0       	ldi	r20, 0x0C	; 12
  b2:	21 50       	subi	r18, 0x01	; 1
  b4:	30 40       	sbci	r19, 0x00	; 0
  b6:	40 40       	sbci	r20, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x46>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x50>
  bc:	00 00       	nop
				_delay_ms(500);
				PORTB &=~ (1<<PB3);
  be:	c3 98       	cbi	0x18, 3	; 24
				while (PINA & (1<<PA4))
  c0:	cc 99       	sbic	0x19, 4	; 25
  c2:	fe cf       	rjmp	.-4      	; 0xc0 <main+0x54>
				{
					
				}
				ESTADO = !ESTADO;
  c4:	46 2f       	mov	r20, r22
  c6:	11 c0       	rjmp	.+34     	; 0xea <main+0x7e>
			}
			else{
				PORTD |= (1<<PD4);
  c8:	94 9a       	sbi	0x12, 4	; 18
  ca:	7f ef       	ldi	r23, 0xFF	; 255
  cc:	24 e3       	ldi	r18, 0x34	; 52
  ce:	3c e0       	ldi	r19, 0x0C	; 12
  d0:	71 50       	subi	r23, 0x01	; 1
  d2:	20 40       	sbci	r18, 0x00	; 0
  d4:	30 40       	sbci	r19, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x64>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x6e>
  da:	00 00       	nop
				_delay_ms(500);
				PORTD &=~ (1<<PD4);
  dc:	94 98       	cbi	0x12, 4	; 18
				while (PINA & (1<<PA4))
  de:	cc 99       	sbic	0x19, 4	; 25
  e0:	fe cf       	rjmp	.-4      	; 0xde <main+0x72>
				{
					
				}
				ESTADO = !ESTADO;
  e2:	25 2f       	mov	r18, r21
  e4:	41 11       	cpse	r20, r1
  e6:	26 2f       	mov	r18, r22
  e8:	42 2f       	mov	r20, r18
			}

		}
		OCR1A = i;
  ea:	29 2f       	mov	r18, r25
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	3b bd       	out	0x2b, r19	; 43
  f0:	2a bd       	out	0x2a, r18	; 42
		OCR2 = j;
  f2:	83 bd       	out	0x23, r24	; 35
		while(PINA & (1<<PA0)){
  f4:	c8 99       	sbic	0x19, 0	; 25
  f6:	03 c0       	rjmp	.+6      	; 0xfe <main+0x92>
			OCR1A = i;
			_delay_ms(50);
			i = i - 1;
		}
		while(PINA & (1<<PA1)){
  f8:	c9 99       	sbic	0x19, 1	; 25
  fa:	15 c0       	rjmp	.+42     	; 0x126 <main+0xba>
  fc:	11 c0       	rjmp	.+34     	; 0x120 <main+0xb4>

		}
		OCR1A = i;
		OCR2 = j;
		while(PINA & (1<<PA0)){
			OCR1A = i;
  fe:	29 2f       	mov	r18, r25
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	3b bd       	out	0x2b, r19	; 43
 104:	2a bd       	out	0x2a, r18	; 42
 106:	7f e7       	ldi	r23, 0x7F	; 127
 108:	28 e3       	ldi	r18, 0x38	; 56
 10a:	31 e0       	ldi	r19, 0x01	; 1
 10c:	71 50       	subi	r23, 0x01	; 1
 10e:	20 40       	sbci	r18, 0x00	; 0
 110:	30 40       	sbci	r19, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0xa0>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0xaa>
 116:	00 00       	nop
			_delay_ms(50);
			i = i - 1;
 118:	91 50       	subi	r25, 0x01	; 1
			}

		}
		OCR1A = i;
		OCR2 = j;
		while(PINA & (1<<PA0)){
 11a:	c8 99       	sbic	0x19, 0	; 25
 11c:	f0 cf       	rjmp	.-32     	; 0xfe <main+0x92>
 11e:	ec cf       	rjmp	.-40     	; 0xf8 <main+0x8c>
			OCR1A = i;
			_delay_ms(50);
			i = i + 1;
		}
		
		while(PINA & (1<<PA2)){
 120:	ca 99       	sbic	0x19, 2	; 25
 122:	15 c0       	rjmp	.+42     	; 0x14e <main+0xe2>
 124:	11 c0       	rjmp	.+34     	; 0x148 <main+0xdc>
			OCR1A = i;
			_delay_ms(50);
			i = i - 1;
		}
		while(PINA & (1<<PA1)){
			OCR1A = i;
 126:	29 2f       	mov	r18, r25
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	3b bd       	out	0x2b, r19	; 43
 12c:	2a bd       	out	0x2a, r18	; 42
 12e:	7f e7       	ldi	r23, 0x7F	; 127
 130:	28 e3       	ldi	r18, 0x38	; 56
 132:	31 e0       	ldi	r19, 0x01	; 1
 134:	71 50       	subi	r23, 0x01	; 1
 136:	20 40       	sbci	r18, 0x00	; 0
 138:	30 40       	sbci	r19, 0x00	; 0
 13a:	e1 f7       	brne	.-8      	; 0x134 <main+0xc8>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <main+0xd2>
 13e:	00 00       	nop
			_delay_ms(50);
			i = i + 1;
 140:	9f 5f       	subi	r25, 0xFF	; 255
		while(PINA & (1<<PA0)){
			OCR1A = i;
			_delay_ms(50);
			i = i - 1;
		}
		while(PINA & (1<<PA1)){
 142:	c9 99       	sbic	0x19, 1	; 25
 144:	f0 cf       	rjmp	.-32     	; 0x126 <main+0xba>
 146:	ec cf       	rjmp	.-40     	; 0x120 <main+0xb4>
		while(PINA & (1<<PA2)){
			OCR2 = j;
			_delay_ms(50);
			j = j - 1;
		}
		while(PINA & (1<<PA3)){
 148:	cb 99       	sbic	0x19, 3	; 25
 14a:	0f c0       	rjmp	.+30     	; 0x16a <main+0xfe>
 14c:	aa cf       	rjmp	.-172    	; 0xa2 <main+0x36>
			_delay_ms(50);
			i = i + 1;
		}
		
		while(PINA & (1<<PA2)){
			OCR2 = j;
 14e:	83 bd       	out	0x23, r24	; 35
 150:	7f e7       	ldi	r23, 0x7F	; 127
 152:	28 e3       	ldi	r18, 0x38	; 56
 154:	31 e0       	ldi	r19, 0x01	; 1
 156:	71 50       	subi	r23, 0x01	; 1
 158:	20 40       	sbci	r18, 0x00	; 0
 15a:	30 40       	sbci	r19, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0xea>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0xf4>
 160:	00 00       	nop
			_delay_ms(50);
			j = j - 1;
 162:	81 50       	subi	r24, 0x01	; 1
			OCR1A = i;
			_delay_ms(50);
			i = i + 1;
		}
		
		while(PINA & (1<<PA2)){
 164:	ca 99       	sbic	0x19, 2	; 25
 166:	f3 cf       	rjmp	.-26     	; 0x14e <main+0xe2>
 168:	ef cf       	rjmp	.-34     	; 0x148 <main+0xdc>
			OCR2 = j;
			_delay_ms(50);
			j = j - 1;
		}
		while(PINA & (1<<PA3)){
			OCR2 = j;
 16a:	83 bd       	out	0x23, r24	; 35
 16c:	7f e7       	ldi	r23, 0x7F	; 127
 16e:	28 e3       	ldi	r18, 0x38	; 56
 170:	31 e0       	ldi	r19, 0x01	; 1
 172:	71 50       	subi	r23, 0x01	; 1
 174:	20 40       	sbci	r18, 0x00	; 0
 176:	30 40       	sbci	r19, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <main+0x106>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <main+0x110>
 17c:	00 00       	nop
			_delay_ms(50);
			j = j + 1;
 17e:	8f 5f       	subi	r24, 0xFF	; 255
		while(PINA & (1<<PA2)){
			OCR2 = j;
			_delay_ms(50);
			j = j - 1;
		}
		while(PINA & (1<<PA3)){
 180:	cb 99       	sbic	0x19, 3	; 25
 182:	f3 cf       	rjmp	.-26     	; 0x16a <main+0xfe>
 184:	8e cf       	rjmp	.-228    	; 0xa2 <main+0x36>

00000186 <_exit>:
 186:	f8 94       	cli

00000188 <__stop_program>:
 188:	ff cf       	rjmp	.-2      	; 0x188 <__stop_program>
